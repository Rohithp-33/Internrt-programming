Coding: 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Online Food Ordering</title>
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      background-image: url('https://images.unsplash.com/photo-1600891964599-f61ba0e24092');
      background-size: cover;
      background-position: center;
      background-attachment: fixed;
      color: #fff;
      margin: 0;
      padding: 0;
      height: 100vh;
    }

    header {
      background-color: rgba(0, 0, 0, 0.85);
      padding: 15px;
      text-align: center;
    }

    nav button {
      margin: 5px;
      padding: 10px 20px;
      border: none;
      border-radius: 30px;
      background: linear-gradient(45deg, #ff9800, #ff5722);
      color: white;
      font-weight: bold;
      cursor: pointer;
      transition: 0.3s;
    }

    nav button:hover {
      background: linear-gradient(45deg, #ff7043, #e64a19);
      transform: scale(1.05);
    }

    section {
      display: none;
      min-height: calc(100vh - 80px);
      padding: 30px;
      overflow-y: auto;
    }

    section.active {
      display: block;
      background-color: rgba(0, 0, 0, 0.7);
    }

    h2 {
      text-align: center;
      color: #ffd700;
    }

    .item, .cart-item {
      background-color: rgba(255, 255, 255, 0.1);
      margin-bottom: 15px;
      padding: 15px;
      border: 1px solid #fff;
      border-radius: 10px;
    }

    .add-btn, .proceed-btn, .pay-btn, .small {
      display: inline-block;
      padding: 10px 20px;
      margin-top: 10px;
      font-size: 14px;
      font-weight: bold;
      border: none;
      border-radius: 30px;
      cursor: pointer;
      transition: 0.3s;
      color: white;
    }

    .add-btn {
      background: linear-gradient(45deg, #00c853, #64dd17);
    }

    .add-btn:hover {
      background: linear-gradient(45deg, #43a047, #2e7d32);
    }

    .proceed-btn {
      background: linear-gradient(45deg, #0288d1, #29b6f6);
    }

    .proceed-btn:hover {
      background: linear-gradient(45deg, #0277bd, #0288d1);
    }

    .pay-btn {
      background: linear-gradient(45deg, #6a1b9a, #ab47bc);
    }

    .pay-btn:hover {
      background: linear-gradient(45deg, #4a148c, #8e24aa);
    }

    .small {
      background-color: #d32f2f;
      font-size: 12px;
      padding: 5px 12px;
      border-radius: 20px;
    }

    .small:hover {
      background-color: #b71c1c;
    }

    #order-status-log {
      margin-top: 15px;
      padding: 10px;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 8px;
    }
  </style>
</head>
<body>
  <header>
    <h1>Online Food Ordering</h1>
    <nav>
      <button onclick="showSection('home')">Home</button>
      <button onclick="showSection('cart')">Cart</button>
      <button onclick="showSection('payment')">Payment</button>
      <button onclick="showSection('track')">Track Order</button>
    </nav>
  </header>

  <section id="home" class="active">
    <h2>Menu</h2>
    <div id="menu-items"></div>
  </section>

  <section id="cart">
    <h2>Your Cart</h2>
    <div id="cart-items"></div>
    <button class="proceed-btn" onclick="placeOrder()" id="place-order-btn" style="display:none;">Proceed to Payment</button>
  </section>

  <section id="payment">
    <h2>Payment</h2>
    <p id="order-summary">No order placed yet.</p>
    <button class="pay-btn" onclick="payNow()">Pay Now</button>
    <p id="payment-status"></p>
  </section>

  <section id="track">
    <h2>Track Order</h2>
    <p id="tracking-status">No active order being tracked.</p>
    <div id="order-status-log"></div>
  </section>

  <script>
    const menu = [
      { id: 1, name: "Margherita Pizza", price: 10 },
      { id: 2, name: "Cheeseburger", price: 8 },
      { id: 3, name: "Sushi Roll", price: 12 },
      { id: 4, name: "Chicken Biryani", price: 11 },
      { id: 5, name: "Pasta Alfredo", price: 9 },
      { id: 6, name: "Veggie Wrap", price: 7 },
      { id: 7, name: "Taco Platter", price: 10 },
      { id: 8, name: "Chocolate Cake", price: 6 },
      { id: 9, name: "Mango Smoothie", price: 5 }
    ];

    const cart = [];
    let orderId = 1;
    let latestOrder = null;
    let trackingInterval;

    function showSection(id) {
      document.querySelectorAll('section').forEach(s => s.classList.remove('active'));
      document.getElementById(id).classList.add('active');
    }

    function renderMenu() {
      const container = document.getElementById('menu-items');
      menu.forEach(item => {
        const div = document.createElement('div');
        div.className = 'item';
        div.innerHTML = `<strong>${item.name}</strong><br>Price: $${item.price}<br>
          <button class='add-btn' onclick='addToCart(${item.id})'>Add to Cart</button>`;
        container.appendChild(div);
      });
    }

    function addToCart(id) {
      const item = menu.find(i => i.id === id);
      cart.push(item);
      renderCart();
    }

    function removeFromCart(index) {
      cart.splice(index, 1);
      renderCart();
    }

    function renderCart() {
      const container = document.getElementById('cart-items');
      container.innerHTML = '';
      let total = 0;
      cart.forEach((item, index) => {
        total += item.price;
        const div = document.createElement('div');
        div.className = 'cart-item';
        div.innerHTML = `${item.name} - $${item.price}
          <button class="small" onclick="removeFromCart(${index})">Cancel</button>`;
        container.appendChild(div);
      });
      if (cart.length) {
        const totalDiv = document.createElement('div');
        totalDiv.className = 'cart-item';
        totalDiv.innerHTML = `<strong>Total: $${total.toFixed(2)}</strong>`;
        container.appendChild(totalDiv);
      }
      document.getElementById('place-order-btn').style.display = cart.length ? 'inline-block' : 'none';
    }

    function placeOrder() {
      if (!cart.length) return;
      latestOrder = {
        id: orderId++,
        items: [...cart],
        total: cart.reduce((acc, item) => acc + item.price, 0)
      };
      document.getElementById('order-summary').textContent =
        `Order #${latestOrder.id} - Total: $${latestOrder.total.toFixed(2)}`;
      cart.length = 0;
      renderCart();
      showSection('payment');
    }

    function payNow() {
      if (!latestOrder) return;
      document.getElementById('payment-status').textContent =
        `Payment for Order #${latestOrder.id} of $${latestOrder.total.toFixed(2)} was successful! ðŸŽ‰`;
      showSection('track');
      trackOrderStatus(latestOrder.id);
    }

    function trackOrderStatus(orderId) {
      const steps = ["Preparing", "Cooking", "Out for Delivery", "Delivered"];
      const status = document.getElementById('tracking-status');
      const log = document.getElementById('order-status-log');
      status.textContent = `Tracking Order #${orderId}...`;
      log.innerHTML = '';
      let step = 0;
      clearInterval(trackingInterval);
      trackingInterval = setInterval(() => {
        if (step < steps.length) {
          const update = `Step ${step + 1}: ${steps[step]}`;
          status.textContent = `Order #${orderId} - ${steps[step]}`;
          const p = document.createElement('p');
          p.textContent = update;
          log.appendChild(p);
          step++;
        } else {
          clearInterval(trackingInterval);
        }
      }, 3000);
    }
    renderMenu();
  </script>
</body>
</html>